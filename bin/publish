#!/usr/bin/env node

const program = require("commander");
const semver = require("semver");
const prettier = require("prettier");
const mainPkg = require("../package.json");
const medicPkg = require("../packages/medic/package.json");
const { join } = require("path");
const { writeFile } = require("../packages/medic/lib/utils");
const cp = require("child_process");

const exec = command =>
  new Promise(async (resolve, reject) => {
    cp.exec(
      command,
      {
        cwd: join(__dirname, ".."),
      },
      (err, stdout, stderr) => {
        if (err) return reject(err);
        if (stderr) return reject(stderr);
        resolve(stdout);
      },
    );
  });

program
  .option(
    "-r, --release <type>",
    "release type",
    /^(major|premajor|minor|preminor|patch|prepatch|prerelease)$/i,
    "patch",
  )
  .parse(process.argv);

(async () => {
  const version = semver.inc(mainPkg.version, "patch");
  mainPkg.version = version;
  medicPkg.dependencies["@minodisk/medkit"] = version;
  medicPkg.dependencies["@minodisk/medmd"] = version;

  const options = await prettier.resolveConfig(
    join(__dirname, "../.prettierrc"),
  );
  const opts = {
    ...options,
    parser: "json",
  };

  await writeFile(
    join(__dirname, "../package.json"),
    prettier.format(JSON.stringify(mainPkg), opts),
  );

  await writeFile(
    join(__dirname, "../packages/medic/package.json"),
    prettier.format(JSON.stringify(medicPkg), opts),
  );

  console.log(
    await exec(
      `yarn workspace @minodisk/medic publish -- --access=public --no-git-tag-version`,
    ),
  );
  console.log(
    await exec(
      `yarn workspace @minodisk/medkit publish -- --access=public --no-git-tag-version`,
    ),
  );
  console.log(
    await exec(
      `yarn workspace @minodisk/medmd publish -- --access=public --no-git-tag-version`,
    ),
  );
  console.log(await exec(`git commit -m v${version}`));
  console.log(await exec(`git tag v${version}`));
  console.log(await exec(`git push`));
  console.log(await exec(`git push --tags`));
})();
